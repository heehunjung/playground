spring:
  application:
    name: playground
  datasource:
    url: ${AWS_ENDPOINT}
    username: ${AWS_USERNAME}
    password: ${AWS_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
#  my:
#    env:
#      kakaoClientId: ${CLIENT_ID}
#      kakaoRestAPIKey: ${KAKAO_APIKEY}
#      kakaoClientSecret: ${CLIENT_SECRET_KEY}
  output:
    ansi:
      enabled: always

jwt:
  access:
    secret: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    expiration: 1800000 # 30분
  refresh:
    secret: "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    expiration: 86400000 # 1일
oauth:
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    end-point: https://accounts.google.com/o/oauth2/v2/auth
    response-type: code
    scopes: profile, email
    access-type: online
    token-uri: https://oauth2.googleapis.com/token
    redirect-uri: ${GOOGLE_REDIRECT_URL}
base-domain:
  front: "http://localhost:8080"

